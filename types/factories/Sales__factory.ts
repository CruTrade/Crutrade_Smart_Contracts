/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { Sales, SalesInterface } from "../Sales";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "buy",
    inputs: [
      {
        name: "buyer",
        type: "address",
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "directSaleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isFiat",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "erc20",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveSchedules",
    inputs: [],
    outputs: [
      {
        name: "scheduleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "dayWeeks",
        type: "uint8[]",
        internalType: "uint8[]",
      },
      {
        name: "hourValues",
        type: "uint8[]",
        internalType: "uint8[]",
      },
      {
        name: "minuteValues",
        type: "uint8[]",
        internalType: "uint8[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllDurationsPaginated",
    inputs: [
      {
        name: "offset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "limit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "durationIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "durationValues",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "total",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDomainSeparator",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDuration",
    inputs: [
      {
        name: "durationId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getListingDelay",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNextScheduleTime",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getNonce",
    inputs: [
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSale",
    inputs: [
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct ISales.Sale",
        components: [
          {
            name: "end",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "start",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "wrapperId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "seller",
            type: "address",
            internalType: "address",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSalesByCollection",
    inputs: [
      {
        name: "collection",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct ISales.Sale[]",
        components: [
          {
            name: "end",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "start",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "wrapperId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "seller",
            type: "address",
            internalType: "address",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSalesByCollectionPaginated",
    inputs: [
      {
        name: "collection",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "offset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "limit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "sales",
        type: "tuple[]",
        internalType: "struct ISales.Sale[]",
        components: [
          {
            name: "end",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "start",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "wrapperId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "seller",
            type: "address",
            internalType: "address",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
        ],
      },
      {
        name: "total",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSalesBySellerPaginated",
    inputs: [
      {
        name: "seller",
        type: "address",
        internalType: "address",
      },
      {
        name: "offset",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "limit",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "saleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "total",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSchedule",
    inputs: [
      {
        name: "scheduleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "dayOfWeek",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "hourValue",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "minuteValue",
        type: "uint8",
        internalType: "uint8",
      },
      {
        name: "isActive",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_roles",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "list",
    inputs: [
      {
        name: "seller",
        type: "address",
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "wrapperId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "directSaleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isFiat",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expireType",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "erc20",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "pause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "paused",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeSchedules",
    inputs: [
      {
        name: "scheduleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "renew",
    inputs: [
      {
        name: "seller",
        type: "address",
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "directSaleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isFiat",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "expireType",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "erc20",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setDurations",
    inputs: [
      {
        name: "durationIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "durations",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setListingDelay",
    inputs: [
      {
        name: "delay",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setSchedules",
    inputs: [
      {
        name: "scheduleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "daysOfWeek",
        type: "uint8[]",
        internalType: "uint8[]",
      },
      {
        name: "hourValues",
        type: "uint8[]",
        internalType: "uint8[]",
      },
      {
        name: "minuteValues",
        type: "uint8[]",
        internalType: "uint8[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "unpause",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "seller",
        type: "address",
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "directSaleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "isFiat",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "erc20",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Buy",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "fees",
        type: "tuple",
        indexed: false,
        internalType: "struct IPayments.TransactionFees",
        components: [
          {
            name: "fromFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "toFee",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "serviceFee",
            type: "tuple",
            internalType: "struct IPayments.ServiceFee",
            components: [
              {
                name: "operation",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "serviceFees",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "fiatFees",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "fees",
            type: "tuple[]",
            internalType: "struct IPayments.Fee[]",
            components: [
              {
                name: "name",
                type: "bytes32",
                internalType: "bytes32",
              },
              {
                name: "percentage",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "wallet",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "DurationSet",
    inputs: [
      {
        name: "durationId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "duration",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "List",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "date",
        type: "tuple",
        indexed: false,
        internalType: "struct ISales.Date",
        components: [
          {
            name: "expireListDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expireUpcomeDate",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "fee",
        type: "tuple",
        indexed: false,
        internalType: "struct IPayments.ServiceFee",
        components: [
          {
            name: "operation",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "serviceFees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fiatFees",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "output",
        type: "tuple",
        indexed: false,
        internalType: "struct SalesBase.ListOutputs",
        components: [
          {
            name: "wrapperId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "erc20",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ListingCancelled",
    inputs: [
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "seller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ListingDelayUpdated",
    inputs: [
      {
        name: "oldDelay",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "newDelay",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NonceUsed",
    inputs: [
      {
        name: "user",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "nonce",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Paused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Renew",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "date",
        type: "tuple",
        indexed: false,
        internalType: "struct ISales.Date",
        components: [
          {
            name: "expireListDate",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "expireUpcomeDate",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "fee",
        type: "tuple",
        indexed: false,
        internalType: "struct IPayments.ServiceFee",
        components: [
          {
            name: "operation",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "serviceFees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fiatFees",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RenewCancelled",
    inputs: [
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "seller",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "RolesSet",
    inputs: [
      {
        name: "roles",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleRemoved",
    inputs: [
      {
        name: "scheduleId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ScheduleSet",
    inputs: [
      {
        name: "scheduleId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "dayOfWeek",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
      {
        name: "hour",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
      {
        name: "minute",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Unpaused",
    inputs: [
      {
        name: "account",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Withdraw",
    inputs: [
      {
        name: "wallet",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "salesId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "fee",
        type: "tuple",
        indexed: false,
        internalType: "struct IPayments.ServiceFee",
        components: [
          {
            name: "operation",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "serviceFees",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "fiatFees",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignature",
    inputs: [],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignatureLength",
    inputs: [
      {
        name: "length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ECDSAInvalidSignatureS",
    inputs: [
      {
        name: "s",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "EnforcedPause",
    inputs: [],
  },
  {
    type: "error",
    name: "ExpectedPause",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "HashAlreadyUsed",
    inputs: [
      {
        name: "hash",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidBrand",
    inputs: [
      {
        name: "brandId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidDurationId",
    inputs: [
      {
        name: "durationId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidListingDelay",
    inputs: [
      {
        name: "delay",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidNonce",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "provided",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidSaleDuration",
    inputs: [
      {
        name: "duration",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidSaleOperation",
    inputs: [
      {
        name: "reason",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidSalePrice",
    inputs: [
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidSignature",
    inputs: [
      {
        name: "expected",
        type: "address",
        internalType: "address",
      },
      {
        name: "actual",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidTimestamp",
    inputs: [
      {
        name: "timestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "NotAllowed",
    inputs: [
      {
        name: "role",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "NotAllowedDelegate",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "NotOwner",
    inputs: [
      {
        name: "claimer",
        type: "address",
        internalType: "address",
      },
      {
        name: "actualOwner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "NotWhitelisted",
    inputs: [
      {
        name: "wallet",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "PaymentNotAllowed",
    inputs: [
      {
        name: "payment",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SaleExpired",
    inputs: [
      {
        name: "endTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SaleNotActive",
    inputs: [
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SaleNotExpired",
    inputs: [
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SaleNotFound",
    inputs: [
      {
        name: "saleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SaleNotStarted",
    inputs: [
      {
        name: "startTime",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "SignatureExpired",
    inputs: [
      {
        name: "expiry",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "current",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

export class Sales__factory {
  static readonly abi = _abi;
  static createInterface(): SalesInterface {
    return new Interface(_abi) as SalesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Sales {
    return new Contract(address, _abi, runner) as unknown as Sales;
  }
}
